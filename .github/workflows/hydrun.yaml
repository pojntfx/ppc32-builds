name: hydrun CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - id: go-lf
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go lf
            dst: out/*
          - id: go-gobuster
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go gobuster
            dst: out/*
          - id: go-ffuf
            src: .
            os: golang:bullseye
            flags: ""
            cmd: ./Hydrunfile go ffuf
            dst: out/*
          - id: gccgo-lf
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo lf
            dst: out/*
          - id: gccgo-gobuster
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo gobuster
            dst: out/*
          - id: gccgo-ffuf
            src: .
            os: ghcr.io/pojntfx/bagccgop-base-sid
            flags: -e '--privileged'
            cmd: ./Hydrunfile gccgo ffuf
            dst: out/*

    steps:
      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}
  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: /tmp/out
      - name: Publish pre-release to GitHub releases
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: unstable
          prerelease: true
          files: |
            /tmp/out/*/*
      - name: Publish release to GitHub releases
        # if: startsWith(github.ref, 'refs/tags/v') # Uncomment if you want tagged releases
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest # Comment if you want tagged releases
          prerelease: false
          files: |
            /tmp/out/*/*
